<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ace, by DAISY</title>
    <link>https://daisy.github.io/ace/</link>
    <description>Recent content on Ace, by DAISY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://daisy.github.io/ace/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command line interface</title>
      <link>https://daisy.github.io/ace/docs/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/cli/</guid>
      <description>Overview The easiest way to run Ace is to type this on the command line:
$ ace ~/Documents/book.epub You&amp;rsquo;ll then see a description of Ace&amp;rsquo;s actions as it runs tests on the book. The JSON report is printed to the command line at the end (nothing is saved to disk; you need to specify --outdir for that).
Example:
info: Processing ../epub-a11y-checker/samples/build/epub-a11y-tests-001.epub info: Parsing EPUB info: Analyzing accessibility metadata info: Checking package.</description>
    </item>
    
    <item>
      <title>How to contribute?</title>
      <link>https://daisy.github.io/ace/contributing/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/contributing/contributing/</guid>
      <description>First, welcome to Ace and thank you so much for being willing to contribute!
Submitting an issue You can first check the issue tracker to see if someone already reported the issue. Don’t forget to included the closed issues in your search in case we fixed it already!
If you can’t find any mention of your issue in our tracker, please file a new issue!
When filing an issue, please provide the following details:</description>
    </item>
    
    <item>
      <title>HTML Rules</title>
      <link>https://daisy.github.io/ace/rules/html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/rules/html/</guid>
      <description>Under the hood, most of the accessibility checks ran by Ace are powered by Deque axe, an engine for automated testing of HTML. Ace uses axe&amp;rsquo;s rules, with some modifications (described here).
Rules Here is a list of axe&amp;rsquo;s rules used by Ace (see the full up to date documentation in GitHub ):
   Rule ID Description     accesskeys Ensures every accesskey attribute value is unique   aria-allowed-role Ensures role attribute has an appropriate value for the element   aria-dialog-name Ensures every ARIA dialog and alertdialog node has an accessible name   aria-text Ensures &amp;quot;role=text&amp;quot; is used on elements with no focusable descendants   aria-treeitem-name Ensures every ARIA treeitem node has an accessible name   empty-heading Ensures headings have discernible text   epub-type-has-matching-role Ensure the element has an ARIA role matching its epub:type   frame-tested Ensures &amp;lt;iframe&amp;gt; and &amp;lt;frame&amp;gt; elements contain the axe-core script   frame-title-unique Ensures &amp;lt;iframe&amp;gt; and &amp;lt;frame&amp;gt; elements contain a unique title attribute   heading-order Ensures the order of headings is semantically correct   identical-links-same-purpose Ensure that links with the same accessible name serve a similar purpose   image-redundant-alt Ensure image alternative is not repeated as text   label-title-only Ensures that every form element is not solely labeled using the title or aria-describedby attributes   landmark-banner-is-top-level Ensures the banner landmark is at top level   landmark-complementary-is-top-level Ensures the complementary landmark or aside is at top level   landmark-contentinfo-is-top-level Ensures the contentinfo landmark is at top level   landmark-main-is-top-level Ensures the main landmark is at top level   landmark-no-duplicate-banner Ensures the document has at most one banner landmark   landmark-no-duplicate-contentinfo Ensures the document has at most one contentinfo landmark   landmark-no-duplicate-main Ensures the document has at most one main landmark   landmark-one-main Ensures the document has a unique main landmark   landmark-unique Landmarks should have a unique role or role/label/title (i.</description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>https://daisy.github.io/ace/help/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/help/troubleshooting/</guid>
      <description>Ace fails with &amp;ldquo;Unexpected error&amp;rdquo; Erm… you probably just hit a bug in Ace. Follow the guidelines for submitting an issue. You may also contact us.
I receive an EACCESS error when trying to install Ace You may receive an EACCESS error when you try to install Ace, for instance when installing the puppeteer dependency. This indicates the you do not have write permissions to the npm installation directories. You can fix this by following the instructions in the npm documentation.</description>
    </item>
    
    <item>
      <title>Why Ace?</title>
      <link>https://daisy.github.io/ace/getting-started/why-ace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/getting-started/why-ace/</guid>
      <description>What is Ace? Ace is a tool to run automated accessibility checks for EPUB Publications, in order to assist in the evaluation of conformance to the EPUB Accessibility specification.
What does Ace do? Specifically, Ace:
 runs automated accessibility tests on EPUB content documents extracts the publication metadata, and checks accessibility-related metadata extracts various document outlines (the ToC, headings, and HTML structure) for side-by-side comparison extracts all the EPUBs images and graphics and their associated accessibility descriptions in a consolidated table, for easier review extracts other various content features to facilitate human-driven accessibility audits can be run as a command line tool, or integrated as a Javascript node module, or driven by an HTTP API  Under the hood, Ace currently runs axe, an engine for automated testing of HTML developed by the good folks at Deque Systems.</description>
    </item>
    
    <item>
      <title>Code base overview</title>
      <link>https://daisy.github.io/ace/contributing/code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/contributing/code/</guid>
      <description>Ace consists of the following packages:
 ace-cli: the command line interface ace-config: unifies the per-package configuration files into a global config file ace-core: the core checker’s logic, and the code responsible for running the underlying Web checker ace-core/scripts: the Javascript files injected in the headless browser to run Ace’s checks ace-http: the Http API ace-logger: logging ace-report and ace-report-axe: utils for building Ace’s reports epub-utils: utils for parsing EPUBs jest-env-puppeteer, jest-puppeteer, and puppeteer-utils: for working with the headless browser  </description>
    </item>
    
    <item>
      <title>Contact us</title>
      <link>https://daisy.github.io/ace/help/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/help/contact/</guid>
      <description>You can reach us:
 via the contact form on InclusivePublishing.org on GitHub, we’re @daisy on Twitter, we’re @InclusivePub  </description>
    </item>
    
    <item>
      <title>EPUB Rules</title>
      <link>https://daisy.github.io/ace/rules/epub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/rules/epub/</guid>
      <description>In addition to the HTML rules, Ace has a set of rules that are EPUB-specific:
   Rule Description     epub-pagesource Ensures that if the content has page breaks, the print source is identified in the Package Document metadata with dc:source.   epub-title Ensures that the EPUB’s title is defined in the Package Document.   epub-type-has-matching-role Ensures that the element has an ARIA role matching its epub:type.</description>
    </item>
    
    <item>
      <title>HTML Report</title>
      <link>https://daisy.github.io/ace/docs/report-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/report-html/</guid>
      <description>Ace outputs a human-readable report in HTML format, containing information about which automated tests failed, as well as extracted data visualizations, to highlight potential problem areas and to assist in manual checking.
Note that the report looks best with javascript enabled, though it&amp;rsquo;s not required.
After the header, which contains the Ace version, report date, and publication title, there are four sections, detailed below.
Violations Summary of Violations This table lists statistics for the violations, in terms of severity: Critical, Serious, Moderate, or Minor; and by ruleset category: WCAG 2.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://daisy.github.io/ace/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/getting-started/installation/</guid>
      <description>Note: this documentation applies to the Ace by DAISY command line tool. For more information about the Ace by DAISY &amp;ldquo;desktop application&amp;rdquo; (as known as the Ace App), please visit this page.
Install Node.JS  Go to Node.JS Download version 10 or higher Double-click to install  Install (or update) Ace  After installing Node, open a shell window  On Windows: Windows System-&amp;gt;Command Prompt or Start-&amp;gt;Run-&amp;gt;cmd.exe On Mac: Applications-&amp;gt;Utilities-&amp;gt;Terminal   Type npm install @daisy/ace -g to install or update Ace  If everything went smoothly, you should now be able to run the ace command in your shell.</description>
    </item>
    
    <item>
      <title>Implementation notes</title>
      <link>https://daisy.github.io/ace/contributing/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/contributing/notes/</guid>
      <description>HTML checker Under the hood, most of the HTML checks are powered by axe, an engine for automated testing of HTML from Deque Systems.
Headless browser During the evaluation of an EPUB, Ace loads each HTML content document in a headless browser, using headless Chrome via Puppeteer.</description>
    </item>
    
    <item>
      <title>JSON Report</title>
      <link>https://daisy.github.io/ace/docs/report-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/report-json/</guid>
      <description>Ace&amp;rsquo;s outputs a machine-readable report in JSON format, detailing the automated tests. The vocabulary of this report is a mix of EARL (Evaluation and Reporting Language), Dublin Core, and custom terms.
Document structure Each example piece of the report shown below appears in order, in one JSON file.
 Header information Outlines Data Properties earl:testSubject for this EPUB file Accessibility metadata summary Assertions  Header information This gives basic information about Ace and when the report was created.</description>
    </item>
    
    <item>
      <title>Running Ace</title>
      <link>https://daisy.github.io/ace/getting-started/running/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/getting-started/running/</guid>
      <description>Note: this documentation applies to the Ace by DAISY command line tool. For more information about the Ace by DAISY &amp;ldquo;desktop application&amp;rdquo; (as known as the Ace App), please visit this page.
Checking an EPUB You can check an EPUB by running the ace command followed by the path to the EPUB document (if the file name includes spaces, place it inside &amp;quot; marks). For example:
$ ace ~/Documents/moby-dick.epub The above command will run the automated accessibility tests on the EPUB document and output the results.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://daisy.github.io/ace/docs/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/config/</guid>
      <description>Overview Ace can be configured through a config.json file located in an OS-specific directory:
 on Windows in &amp;quot;%HOME%\AppData\Local\DAISY Ace\Config\&amp;quot; on macOS in &amp;quot;~/Library/Preferences/DAISY\ Ace/&amp;quot; on Linux in &amp;quot;~/.config/DAISY Ace/&amp;quot;  Defaults The defaults for Ace configuration are:
{ &amp;#34;cli&amp;#34;: { &amp;#34;return-2-on-validation-error&amp;#34;: false }, &amp;#34;logging&amp;#34;: { &amp;#34;fileName&amp;#34;: &amp;#34;ace.log&amp;#34;, &amp;#34;level&amp;#34;: &amp;#34;info&amp;#34; }, &amp;#34;output&amp;#34;: { &amp;#34;force&amp;#34;: false, &amp;#34;subdir&amp;#34;: false }, &amp;#34;report&amp;#34;: { &amp;#34;use-relative-paths&amp;#34;: true }, &amp;#34;runtime&amp;#34;: { &amp;#34;concurrencyLevel&amp;#34;: 4 } } Reference cli.</description>
    </item>
    
    <item>
      <title>The Ace App</title>
      <link>https://daisy.github.io/ace/getting-started/ace-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/getting-started/ace-app/</guid>
      <description>What is the Ace by DAISY App? Ace by DAISY App is the official graphical user interface for the EPUB accessibility checker developed by the DAISY Consortium. The Ace App is available for the Windows, MacOS and Linux desktop operating systems.
Where can I download the Ace App? The latest version of the Ace App is 1.1.5. The application installers are distributed via the GitHub development website. Here are convenient download links:</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://daisy.github.io/ace/docs/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/logging/</guid>
      <description>Overview Ace prints a log of messages in a ace.log file located in an OS-specific directory:
 on Windows in &amp;quot;%HOME%\AppData\Local\DAISY Ace\Log\&amp;quot; on macOS in &amp;quot;~/Library/Logs/DAISY\ Ace/&amp;quot; on Linux in &amp;quot;~/.local/state/DAISY Ace/&amp;quot;  Configuration The logging level and the name of the log file can be configured through Ace’s config file. Read more on Ace configuration to know more.</description>
    </item>
    
    <item>
      <title>Http API</title>
      <link>https://daisy.github.io/ace/docs/http-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daisy.github.io/ace/docs/http-api/</guid>
      <description>Starting the server After installing Ace, run the ace-http command from the terminal:
$ ace-http info: [ace-http] server listening on http://localhost:8000 The command line options are printed when you run ace-http --help:
Ace by DAISY, an Accessibility Checker for EPUB Usage: ace-http [options] Options: -h, --help output usage information -v, --version output the version number -H, --host set the server&#39;s hostname (default: localhost) -p, --port set the server&#39;s port (default: 8000) -V, --verbose display verbose output -s, --silent do not display any output -l, --lang &amp;lt;language&amp;gt; language code for localized messages (e.</description>
    </item>
    
  </channel>
</rss>
